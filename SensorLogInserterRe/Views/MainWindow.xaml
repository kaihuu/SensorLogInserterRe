<Window x:Class="SensorLogInserterRe.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:SensorLogInserterRe.Views"
        xmlns:vm="clr-namespace:SensorLogInserterRe.ViewModels"
        Title="SensorLogInserter Re ver 1.2"
        Width="525"
        Height="525">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <Grid Margin="10,0,10,10">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0">

            <GroupBox.Header>
                <Label Content="ドライバー選択" />
            </GroupBox.Header>

            <StackPanel Margin="10,0,0,0" Orientation="Horizontal">

                <CheckBox Content="富井" IsChecked="{Binding IsCheckedTommy}"/>
                <CheckBox Margin="10,0,0,0" Content="森" IsChecked="{Binding IsCheckedMori}" />
                <CheckBox Margin="10,0,0,0" Content="田村" IsChecked="{Binding IsCheckedTamura}" />
                <CheckBox Margin="10,0,0,0" Content="研究室メンバー" IsChecked="{Binding IsCheckedLabMember}" />

            </StackPanel>

        </GroupBox>

        <GroupBox Grid.Row="1">

            <GroupBox.Header>
                <Label Content="期間選択" />
            </GroupBox.Header>

            <StackPanel Grid.Row="1"
                        Margin="10,0,0,0"
                        Orientation="Horizontal">

                <CheckBox VerticalAlignment="Center" Content="期間指定あり" IsChecked="{Binding IsCheckedPeriod}" />

                <DatePicker Margin="15,0,0,0" SelectedDate="{Binding StartDate}"/>

                <Label Content="～" />

                <DatePicker SelectedDate="{Binding EndDate}"/>

            </StackPanel>

        </GroupBox>

        <GroupBox Grid.Row="2">

            <GroupBox.Header>
                <Label Content="推定対象車両" />
            </GroupBox.Header>

            <StackPanel Grid.Row="1"
                        Margin="10,0,0,0"
                        Orientation="Horizontal">

                <CheckBox Content="LEAF 前期型" IsChecked="{Binding  IsCheckedLeafEarlyModel }" />

            </StackPanel>

        </GroupBox>

        <GroupBox Grid.Row="3">

            <GroupBox.Header>
                <Label Content="推定モデル" />
            </GroupBox.Header>

            <StackPanel Grid.Row="1"
                        Margin="10,0,0,0"
                        Orientation="Horizontal">

                <CheckBox Content="EVエネルギー消費モデル" IsChecked="{Binding IsCheckedEvModel}" />

                <CheckBox Margin="10,0,0,0" Content="機械学習モデル" IsChecked="{Binding IsCheckedMlModel}" IsEnabled="False" />

            </StackPanel>

        </GroupBox>

        <GroupBox Grid.Row="4">

            <GroupBox.Header>
                <Label Content="GPS補正" />
            </GroupBox.Header>

            <StackPanel 
                        Margin="10,0,0,0"
                        Orientation="Horizontal">

                <RadioButton Content="マップマッチング" IsChecked="{Binding  IsCheckedMapMatching}" />

                <RadioButton Margin="10,0,0,0" Content="ノーマル" IsChecked="{Binding IsCheckedNormal}" />

                <RadioButton Margin="10,0,0,0" Content="速度ローパスフィルタ+マップマッチング" IsChecked="{Binding IsCheckedSpeedLPFMapMatching}"  />

                <RadioButton Margin="10,0,0,0" Content="LPFEX" IsChecked="{Binding IsCheckedLPFEx}"  />

            </StackPanel>

        </GroupBox>

        <GroupBox Grid.Row="5">

            <GroupBox.Header>
                <Label Content="挿入チェック" />
            </GroupBox.Header>

            <StackPanel Margin="10,0,0,0"
                        Orientation="Horizontal">

                <CheckBox Content="加速度" IsChecked="{Binding  IsCheckedInsertAcc}" />

                <CheckBox Margin="10,0,0,0" Content="補正加速度" IsChecked="{Binding IsCheckedInsertCorrectedAcc}" IsEnabled="False"  />

            </StackPanel>

        </GroupBox>

        <Grid Grid.Row="6" Height="50">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Margin="10"
                    Content="{Binding LoopButtonText}" >

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="StartUpLoop"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </Button>

            <Button Grid.Column="1"
                    Margin="10"
                    Content="データ挿入"
                    IsEnabled="{Binding IsEnabledInsertButton}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Insert"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </Button>

        </Grid>

        <ScrollViewer Grid.Row="7" Margin="5,0">

            <TextBox Text="{Binding LogText}"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Auto" />

        </ScrollViewer>

    </Grid>

</Window>
